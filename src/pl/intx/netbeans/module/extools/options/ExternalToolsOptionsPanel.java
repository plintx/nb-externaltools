/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package pl.intx.netbeans.module.extools.options;

import java.io.IOException;
import javax.swing.JFileChooser;
import pl.intx.netbeans.module.extools.models.ExternalTool;
import javax.swing.JOptionPane;
import org.openide.util.Exceptions;

final class ExternalToolsOptionsPanel extends javax.swing.JPanel {

    private final ExternalToolsOptionsPanelController controller;
    private ExternalTool currentSelectedItem;

    ExternalToolsOptionsPanel(ExternalToolsOptionsPanelController controller) {
        this.controller = controller;
        initComponents();
        clearUI();
        toggleUI(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jSplitPane1 = new javax.swing.JSplitPane();
        jPanel1 = new javax.swing.JPanel();
        jToolNameTextField = new javax.swing.JTextField();
        jNameLabel = new javax.swing.JLabel();
        jPathLabel = new javax.swing.JLabel();
        jToolPathTextField = new javax.swing.JTextField();
        jAddNewToolButton = new javax.swing.JButton();
        jUpdateToolButton = new javax.swing.JButton();
        jDeleteToolButton = new javax.swing.JButton();
        jArgsLabel = new javax.swing.JLabel();
        jToolArgsTextField = new javax.swing.JTextField();
        jBrowseButton = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jToolList = new javax.swing.JList();

        jSplitPane1.setBorder(null);
        jSplitPane1.setDividerLocation(120);

        org.openide.awt.Mnemonics.setLocalizedText(jNameLabel, org.openide.util.NbBundle.getMessage(ExternalToolsOptionsPanel.class, "ExternalToolsOptionsPanel.jNameLabel.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(jPathLabel, org.openide.util.NbBundle.getMessage(ExternalToolsOptionsPanel.class, "ExternalToolsOptionsPanel.jPathLabel.text")); // NOI18N

        jToolPathTextField.setText(org.openide.util.NbBundle.getMessage(ExternalToolsOptionsPanel.class, "ExternalToolsOptionsPanel.jToolPathTextField.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(jAddNewToolButton, org.openide.util.NbBundle.getMessage(ExternalToolsOptionsPanel.class, "ExternalToolsOptionsPanel.jAddNewToolButton.text")); // NOI18N
        jAddNewToolButton.setName("jAddNewToolButton"); // NOI18N
        jAddNewToolButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jAddNewToolButtonActionPerformed(evt);
            }
        });

        org.openide.awt.Mnemonics.setLocalizedText(jUpdateToolButton, org.openide.util.NbBundle.getMessage(ExternalToolsOptionsPanel.class, "ExternalToolsOptionsPanel.jUpdateToolButton.text")); // NOI18N
        jUpdateToolButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jUpdateToolButtonActionPerformed(evt);
            }
        });

        org.openide.awt.Mnemonics.setLocalizedText(jDeleteToolButton, org.openide.util.NbBundle.getMessage(ExternalToolsOptionsPanel.class, "ExternalToolsOptionsPanel.jDeleteToolButton.text")); // NOI18N
        jDeleteToolButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jDeleteToolButtonActionPerformed(evt);
            }
        });

        org.openide.awt.Mnemonics.setLocalizedText(jArgsLabel, org.openide.util.NbBundle.getMessage(ExternalToolsOptionsPanel.class, "ExternalToolsOptionsPanel.jArgsLabel.text_1")); // NOI18N

        jToolArgsTextField.setText(org.openide.util.NbBundle.getMessage(ExternalToolsOptionsPanel.class, "ExternalToolsOptionsPanel.jToolArgsTextField.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(jBrowseButton, org.openide.util.NbBundle.getMessage(ExternalToolsOptionsPanel.class, "ExternalToolsOptionsPanel.jBrowseButton.text")); // NOI18N
        jBrowseButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBrowseButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jAddNewToolButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jUpdateToolButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jDeleteToolButton))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jNameLabel)
                            .addComponent(jPathLabel)
                            .addComponent(jArgsLabel))
                        .addGap(15, 15, 15)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jToolPathTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 345, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jBrowseButton))
                            .addComponent(jToolNameTextField)
                            .addComponent(jToolArgsTextField))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jToolNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jNameLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jPathLabel)
                    .addComponent(jToolPathTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBrowseButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jArgsLabel)
                    .addComponent(jToolArgsTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 135, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jAddNewToolButton)
                    .addComponent(jUpdateToolButton)
                    .addComponent(jDeleteToolButton))
                .addContainerGap())
        );

        jAddNewToolButton.getAccessibleContext().setAccessibleDescription(org.openide.util.NbBundle.getMessage(ExternalToolsOptionsPanel.class, "ExternalToolsOptionsPanel.jAddNewToolButton.AccessibleContext.accessibleDescription")); // NOI18N

        jSplitPane1.setRightComponent(jPanel1);

        jToolList.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jToolListMouseReleased(evt);
            }
        });
        jScrollPane1.setViewportView(jToolList);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 96, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addComponent(jScrollPane1)
                .addGap(0, 0, 0))
        );

        jSplitPane1.setLeftComponent(jPanel2);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addComponent(jSplitPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 623, Short.MAX_VALUE)
                .addGap(0, 0, 0))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addComponent(jSplitPane1)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jToolListMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jToolListMouseReleased
        loadCurrentSelectedItem();
    }//GEN-LAST:event_jToolListMouseReleased

    private void loadCurrentSelectedItem() {
        currentSelectedItem = (ExternalTool) jToolList.getSelectedValue();
        loadTool(currentSelectedItem);
    }

    private void jAddNewToolButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jAddNewToolButtonActionPerformed
        controller.createNewTool();
        jToolList.updateUI();
        jToolList.setSelectedIndex(jToolList.getModel().getSize() - 1);
        loadCurrentSelectedItem();
        controller.changed();
    }//GEN-LAST:event_jAddNewToolButtonActionPerformed

    private void jUpdateToolButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jUpdateToolButtonActionPerformed
        currentSelectedItem.setName(jToolNameTextField.getText());
        currentSelectedItem.setPath(jToolPathTextField.getText());
        currentSelectedItem.setArgs(jToolArgsTextField.getText());
        jToolList.updateUI();
        controller.changed();

    }//GEN-LAST:event_jUpdateToolButtonActionPerformed

    private void jDeleteToolButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jDeleteToolButtonActionPerformed
        int dialogResult = JOptionPane.showConfirmDialog(null, "Do you really want to delete these item?\nThis process cannot be undone.", "Warning", JOptionPane.YES_NO_OPTION);

        if (dialogResult == JOptionPane.YES_OPTION) {
            controller.removeItem(currentSelectedItem);
            jToolList.updateUI();
            loadCurrentSelectedItem();
            controller.changed();
        }
    }//GEN-LAST:event_jDeleteToolButtonActionPerformed

    private void jBrowseButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBrowseButtonActionPerformed
        String filePath = browseForFile();
        if (filePath != null)
            jToolPathTextField.setText(filePath);
    }//GEN-LAST:event_jBrowseButtonActionPerformed

    private String browseForFile() {
        JFileChooser chooser = new JFileChooser();
        int returnVal = chooser.showOpenDialog(this);
        if (returnVal == JFileChooser.APPROVE_OPTION) {
            try {
                return chooser.getSelectedFile().getCanonicalPath();
            } catch (IOException ex) {
                Exceptions.printStackTrace(ex);
            }
        }
        return null;
    }

    void load() {
        controller.loadListModel();
        jToolList.setModel(controller.getToolListModel());
    }

    void store() {
        controller.storeListModel();
        controller.update();
        loadCurrentSelectedItem();

    }

    boolean valid() {
        return true;
    }

    private void loadTool(ExternalTool tool) {
        currentSelectedItem = tool;
        if (tool == null) {
            clearUI();
            toggleUI(false);
            return;
        }

        clearUI();
        toggleUI(true);
        jToolNameTextField.setText(tool.getName());
        jToolPathTextField.setText(tool.getPath());
        jToolArgsTextField.setText(tool.getArgs());
    }

    private void clearUI() {
        jToolNameTextField.setText("");
        jToolPathTextField.setText("");
        jToolArgsTextField.setText("");
    }

    private void toggleUI(boolean enabled) {
        jToolNameTextField.setEnabled(enabled);
        jToolPathTextField.setEnabled(enabled);
        jToolArgsTextField.setEnabled(enabled);
        jUpdateToolButton.setEnabled(enabled);
        jDeleteToolButton.setEnabled(enabled);
        jBrowseButton.setEnabled(enabled);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jAddNewToolButton;
    private javax.swing.JLabel jArgsLabel;
    private javax.swing.JButton jBrowseButton;
    private javax.swing.JButton jDeleteToolButton;
    private javax.swing.JLabel jNameLabel;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JLabel jPathLabel;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSplitPane jSplitPane1;
    private javax.swing.JTextField jToolArgsTextField;
    private javax.swing.JList jToolList;
    private javax.swing.JTextField jToolNameTextField;
    private javax.swing.JTextField jToolPathTextField;
    private javax.swing.JButton jUpdateToolButton;
    // End of variables declaration//GEN-END:variables

}
